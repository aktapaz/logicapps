{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.7.4.23292",
      "templateHash": "3454356343382010379"
    }
  },
  "parameters": {
    "deploymentNameSuffix": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "avdtest"
    },
    "location": {
      "type": "string",
      "defaultValue": "usgovvirginia"
    },
    "automationAccountConnectionName": {
      "type": "string",
      "defaultValue": "azureautomation"
    },
    "automationAccountName": {
      "type": "string",
      "defaultValue": "avdtest"
    },
    "automationAccountResourceGroup": {
      "type": "string",
      "defaultValue": "avdtest"
    },
    "automationAccountLocation": {
      "type": "string",
      "defaultValue": "usgovvirginia"
    },
    "runbookNewHostPoolRipAndReplace": {
      "type": "string",
      "defaultValue": "New-HostPoolRipAndReplace"
    },
    "runbookScheduleRunbookName": {
      "type": "string",
      "defaultValue": "Get-RunBookSchedule"
    },
    "runbookGetSessionHostVm": {
      "type": "string",
      "defaultValue": "Get-SessionHostVirtualMachine"
    },
    "runbookMarketPlaceImageVersion": {
      "type": "string",
      "defaultValue": "Get-MarketPlaceImageVersion"
    },
    "workflows_GetImageVersion_name": {
      "type": "string",
      "defaultValue": "GetImageVersion-demo2"
    },
    "recurrenceFrequency": {
      "type": "string",
      "defaultValue": "Minute"
    },
    "recurrenceInterval": {
      "type": "int",
      "defaultValue": 5
    },
    "recurrenceType": {
      "type": "string",
      "defaultValue": "Recurrence"
    },
    "waitForRunBook": {
      "type": "bool",
      "defaultValue": true
    },
    "falseExpression": {
      "type": "bool",
      "defaultValue": false
    },
    "trueExpression": {
      "type": "bool",
      "defaultValue": true
    },
    "workflows_GetBlobUpdate_name": {
      "type": "string",
      "defaultValue": "GetBlobUpdate-demo2"
    },
    "blobConnectionName": {
      "type": "string",
      "defaultValue": "azureblob"
    },
    "identityType": {
      "type": "string",
      "defaultValue": "SystemAssigned"
    },
    "state": {
      "type": "string",
      "defaultValue": "Enabled"
    },
    "schema": {
      "type": "string",
      "defaultValue": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#"
    },
    "contentVersion": {
      "type": "string",
      "defaultValue": "1.0.0.0"
    },
    "connectionType": {
      "type": "string",
      "defaultValue": "Object"
    },
    "triggerFrequency": {
      "type": "string",
      "defaultValue": "Minute"
    },
    "triggerInterval": {
      "type": "int",
      "defaultValue": 3
    },
    "container": {
      "type": "string",
      "defaultValue": "avdtest2"
    },
    "hostPoolName": {
      "type": "string",
      "defaultValue": "ProdMirror"
    },
    "checkBothCreatedAndModifiedDateTime": {
      "type": "bool",
      "defaultValue": false
    },
    "maxFileCount": {
      "type": "int",
      "defaultValue": 10
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "avdtest2"
    },
    "roleId": {
      "type": "string",
      "defaultValue": "b24988ac-6180-42a0-ab88-20f7382dd24c"
    },
    "avdResourceGroupName": {
      "type": "string",
      "defaultValue": "rg-sharedservices-til-001"
    }
  },
  "variables": {
    "subscriptionId": "[subscription().subscriptionId]",
    "runbooks": [
      {
        "name": "Get-RunBookSchedule",
        "uri": "https://raw.githubusercontent.com/mikedzikowski/logicapps/main/runbooks/Get-RunBookSchedule.ps1"
      },
      {
        "name": "Get-MarketPlaceImageVersion",
        "uri": "https://raw.githubusercontent.com/mikedzikowski/logicapps/main/runbooks/Get-MarketPlaceImageVersion.ps1"
      },
      {
        "name": "Get-SessionHostVirtualMachine",
        "uri": "https://raw.githubusercontent.com/mikedzikowski/logicapps/main/runbooks/Get-SessionHostVirtualMachine.ps1"
      },
      {
        "name": "New-HostPoolRipAndReplace",
        "uri": "https://raw.githubusercontent.com/mikedzikowski/logicapps/main/runbooks/New-HostPoolRipAndReplace.ps1"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('storageAccountName')]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountType": {
            "value": "Standard_LRS"
          },
          "containerName": {
            "value": "[parameters('container')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "16895415836152707902"
            }
          },
          "parameters": {
            "storageAccountType": {
              "type": "string",
              "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
              ]
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "storageAccountName": {
              "type": "string"
            },
            "containerName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "kind": "StorageV2",
              "properties": {}
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('containerName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('automationAccountName')]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('automationAccountResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "automationAccountName": {
            "value": "[parameters('automationAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "runbookNames": {
            "value": "[variables('runbooks')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "7131402021304466778"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "automationAccountName": {
              "type": "string"
            },
            "runbookNames": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2021-06-22",
              "name": "[parameters('automationAccountName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "sku": {
                  "name": "Basic"
                },
                "encryption": {
                  "keySource": "Microsoft.Automation",
                  "identity": {}
                }
              }
            },
            {
              "copy": {
                "name": "runbookDeployment",
                "count": "[length(parameters('runbookNames'))]"
              },
              "type": "Microsoft.Automation/automationAccounts/runbooks",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('runbookNames')[copyIndex()].name)]",
              "location": "[parameters('location')]",
              "properties": {
                "runbookType": "PowerShell",
                "logProgress": true,
                "logVerbose": true,
                "publishContentLink": {
                  "uri": "[parameters('runbookNames')[copyIndex()].uri]",
                  "version": "1.0.0.0"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "aaIdentityId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName')), '2021-06-22', 'full').identity.principalId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('automationAccountConnection-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "connection_azureautomation_name": {
            "value": "[parameters('automationAccountConnectionName')]"
          },
          "subscriptionId": {
            "value": "[variables('subscriptionId')]"
          },
          "displayName": {
            "value": "[parameters('automationAccountConnectionName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "16463077532820351799"
            }
          },
          "parameters": {
            "connection_azureautomation_name": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[parameters('connection_azureautomation_name')]",
              "location": "[parameters('location')]",
              "kind": "V1",
              "properties": {
                "displayName": "[parameters('displayName')]",
                "parameterValueType": "Alternative",
                "customParameterValues": {},
                "api": {
                  "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureautomation', parameters('subscriptionId'), resourceGroup().location)]"
                },
                "testLinks": []
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('blobConnection-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageName": {
            "value": "[parameters('storageAccountName')]"
          },
          "name": {
            "value": "[parameters('blobConnectionName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "4623193036124876642"
            }
          },
          "parameters": {
            "storageName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[parameters('name')]",
              "kind": "V1",
              "location": "[parameters('location')]",
              "properties": {
                "displayName": "[format('{0}-blobconnection', parameters('storageName'))]",
                "parameterValues": {
                  "accountName": "[parameters('storageName')]",
                  "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2021-06-01').keys[0].value]"
                },
                "api": {
                  "name": "[parameters('name')]",
                  "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureblob', subscription().subscriptionId, resourceGroup().location)]",
                  "type": "Microsoft.Web/locations/managedApis"
                }
              }
            }
          ],
          "outputs": {
            "blobConnectionId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/connections', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('rbac-AAConnector-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('getImageVersionlogicApp-deployment-{0}', parameters('deploymentNameSuffix')))).outputs.imagePrincipalId.value]"
          },
          "roleId": {
            "value": "[parameters('roleId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "5413392750896876686"
            }
          },
          "parameters": {
            "canDelegate": {
              "type": "bool",
              "defaultValue": false
            },
            "description": {
              "type": "string",
              "defaultValue": "Contributor RBAC permission"
            },
            "principalId": {
              "type": "string"
            },
            "roleId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(resourceGroup().id, parameters('principalId'))]",
              "properties": {
                "canDelegate": "[parameters('canDelegate')]",
                "description": "[parameters('description')]",
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleId'))]"
              }
            }
          ],
          "outputs": {
            "rbac": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, parameters('principalId')))).roleDefinitionId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountResourceGroup')), 'Microsoft.Resources/deployments', parameters('automationAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('automationAccountConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('blobConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('getBlobUpdateLogicApp-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('getImageVersionlogicApp-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('rbac-blobConnector-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('getBlobUpdateLogicApp-deployment-{0}', parameters('deploymentNameSuffix')))).outputs.blobPrincipalId.value]"
          },
          "roleId": {
            "value": "[parameters('roleId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "5413392750896876686"
            }
          },
          "parameters": {
            "canDelegate": {
              "type": "bool",
              "defaultValue": false
            },
            "description": {
              "type": "string",
              "defaultValue": "Contributor RBAC permission"
            },
            "principalId": {
              "type": "string"
            },
            "roleId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(resourceGroup().id, parameters('principalId'))]",
              "properties": {
                "canDelegate": "[parameters('canDelegate')]",
                "description": "[parameters('description')]",
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleId'))]"
              }
            }
          ],
          "outputs": {
            "rbac": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, parameters('principalId')))).roleDefinitionId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountResourceGroup')), 'Microsoft.Resources/deployments', parameters('automationAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('automationAccountConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('blobConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('getBlobUpdateLogicApp-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('getImageVersionlogicApp-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('rbac-automationAccount-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('avdResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountResourceGroup')), 'Microsoft.Resources/deployments', parameters('automationAccountName'))).outputs.aaIdentityId.value]"
          },
          "roleId": {
            "value": "[parameters('roleId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "5413392750896876686"
            }
          },
          "parameters": {
            "canDelegate": {
              "type": "bool",
              "defaultValue": false
            },
            "description": {
              "type": "string",
              "defaultValue": "Contributor RBAC permission"
            },
            "principalId": {
              "type": "string"
            },
            "roleId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[guid(resourceGroup().id, parameters('principalId'))]",
              "properties": {
                "canDelegate": "[parameters('canDelegate')]",
                "description": "[parameters('description')]",
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleId'))]"
              }
            }
          ],
          "outputs": {
            "rbac": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, parameters('principalId')))).roleDefinitionId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountResourceGroup')), 'Microsoft.Resources/deployments', parameters('automationAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('automationAccountConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('blobConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('getBlobUpdateLogicApp-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('getImageVersionlogicApp-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('getImageVersionlogicApp-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "subscriptionId": {
            "value": "[variables('subscriptionId')]"
          },
          "workflows_GetImageVersion_name": {
            "value": "[parameters('workflows_GetImageVersion_name')]"
          },
          "automationAccountConnectionName": {
            "value": "[parameters('automationAccountConnectionName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "state": {
            "value": "[parameters('state')]"
          },
          "recurrenceFrequency": {
            "value": "[parameters('recurrenceFrequency')]"
          },
          "recurrenceType": {
            "value": "[parameters('recurrenceType')]"
          },
          "recurrenceInterval": {
            "value": "[parameters('recurrenceInterval')]"
          },
          "automationAccountName": {
            "value": "[parameters('automationAccountName')]"
          },
          "automationAccountLocation": {
            "value": "[parameters('automationAccountLocation')]"
          },
          "automationAccountResourceGroup": {
            "value": "[parameters('automationAccountResourceGroup')]"
          },
          "runbookNewHostPoolRipAndReplace": {
            "value": "[parameters('runbookNewHostPoolRipAndReplace')]"
          },
          "getRunbookScheduleRunbookName": {
            "value": "[parameters('runbookScheduleRunbookName')]"
          },
          "getRunbookGetSessionHostVm": {
            "value": "[parameters('runbookGetSessionHostVm')]"
          },
          "getGetMarketPlaceImageVersion": {
            "value": "[parameters('runbookMarketPlaceImageVersion')]"
          },
          "waitForRunBook": {
            "value": "[parameters('waitForRunBook')]"
          },
          "falseExpression": {
            "value": "[parameters('falseExpression')]"
          },
          "trueExpression": {
            "value": "[parameters('trueExpression')]"
          },
          "hostPoolName": {
            "value": "[parameters('hostPoolName')]"
          },
          "identityType": {
            "value": "[parameters('identityType')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "15932325763402389594"
            }
          },
          "parameters": {
            "subscriptionId": {
              "type": "string"
            },
            "workflows_GetImageVersion_name": {
              "type": "string"
            },
            "automationAccountConnectionName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "recurrenceFrequency": {
              "type": "string"
            },
            "recurrenceInterval": {
              "type": "int"
            },
            "recurrenceType": {
              "type": "string"
            },
            "automationAccountName": {
              "type": "string"
            },
            "automationAccountResourceGroup": {
              "type": "string"
            },
            "automationAccountLocation": {
              "type": "string"
            },
            "runbookNewHostPoolRipAndReplace": {
              "type": "string"
            },
            "getRunbookScheduleRunbookName": {
              "type": "string"
            },
            "getRunbookGetSessionHostVm": {
              "type": "string"
            },
            "getGetMarketPlaceImageVersion": {
              "type": "string"
            },
            "waitForRunBook": {
              "type": "bool"
            },
            "falseExpression": {
              "type": "bool"
            },
            "trueExpression": {
              "type": "bool"
            },
            "hostPoolName": {
              "type": "string"
            },
            "identityType": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[parameters('workflows_GetImageVersion_name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "[parameters('identityType')]"
              },
              "properties": {
                "state": "[parameters('state')]",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "defaultValue": {},
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Recurrence": {
                      "recurrence": {
                        "frequency": "[parameters('recurrenceFrequency')]",
                        "interval": "[parameters('recurrenceInterval')]"
                      },
                      "evaluatedRecurrence": {
                        "frequency": "[parameters('recurrenceFrequency')]",
                        "interval": "[parameters('recurrenceInterval')]"
                      },
                      "type": "[parameters('recurrenceType')]"
                    }
                  },
                  "actions": {
                    "Check_for_existing_Schedule": {
                      "runAfter": {
                        "Parse_Session_Host_VM_and_RG": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "properties": {
                            "parameters": {
                              "AutomationAccountName": "[parameters('automationAccountName')]",
                              "ResourceGroupName": "[parameters('automationAccountResourceGroup')]",
                              "runbookName": "[parameters('runbookNewHostPoolRipAndReplace')]"
                            }
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureautomation']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "[concat(format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName')))]",
                        "queries": {
                          "runbookName": "[parameters('getRunbookScheduleRunbookName')]",
                          "wait": "[parameters('waitForRunBook')]",
                          "x-ms-api-version": "2015-10-31"
                        }
                      }
                    },
                    "Condition": {
                      "actions": {
                        "Create_rip_and_replace_job": {
                          "runAfter": {},
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "[concat(format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName')))]",
                            "queries": {
                              "runbookName": "[parameters('runbookNewHostPoolRipAndReplace')]",
                              "wait": "[parameters('waitForRunBook')]",
                              "x-ms-api-version": "2015-10-31"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_image_version": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Terminate": {
                            "runAfter": {},
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Cancelled"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@body('Parse_Schedule')?['ScheduleFound']",
                              "[parameters('falseExpression')]"
                            ]
                          },
                          {
                            "equals": [
                              "@body('Parse_image_version')?['NewImageFound']",
                              "[parameters('trueExpression')]"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Get_Session_Host_VM": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "properties": {
                            "parameters": {
                              "hostpoolName": "[parameters('hostPoolName')]"
                            }
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureautomation']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "[concat(format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName')))]",
                        "queries": {
                          "runbookName": "[parameters('getRunbookGetSessionHostVm')]",
                          "wait": true,
                          "x-ms-api-version": "2015-10-31"
                        }
                      }
                    },
                    "Get_job_output": {
                      "runAfter": {
                        "Get_Session_Host_VM": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureautomation']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "[concat(format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs/@{{encodeURIComponent(body(''Get_Session_Host_VM'')?[''properties'']?[''jobId''])}}/output', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName')))]",
                        "queries": {
                          "x-ms-api-version": "2015-10-31"
                        }
                      }
                    },
                    "Get_job_output_of_marketplace_image_version": {
                      "runAfter": {
                        "Get_marketplace_image_version": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureautomation']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "[concat(format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs/@{{encodeURIComponent(body(''Get_marketplace_image_version'')?[''properties'']?[''jobId''])}}/output', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName')))]",
                        "queries": {
                          "x-ms-api-version": "2015-10-31"
                        }
                      }
                    },
                    "Get_marketplace_image_version": {
                      "runAfter": {
                        "Parse_Schedule": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "properties": {
                            "parameters": {
                              "ResourceGroupName": "@body('Parse_Session_Host_VM_and_RG')?['productionVmRg']",
                              "VMName": "@body('Parse_Session_Host_VM_and_RG')?['productionVm']"
                            }
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureautomation']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "[concat(format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName')))]",
                        "queries": {
                          "runbookName": "[parameters('getGetMarketPlaceImageVersion')]",
                          "wait": true,
                          "x-ms-api-version": "2015-10-31"
                        }
                      }
                    },
                    "Get_output_from_runbook_Get-RunBookSchedule": {
                      "runAfter": {
                        "Check_for_existing_Schedule": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureautomation']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "[concat(format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs/@{{encodeURIComponent(body(''Check_for_existing_Schedule'')?[''properties'']?[''jobId''])}}/output', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName')))]",
                        "queries": {
                          "x-ms-api-version": "2015-10-31"
                        }
                      }
                    },
                    "Parse_Schedule": {
                      "runAfter": {
                        "Get_output_from_runbook_Get-RunBookSchedule": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_output_from_runbook_Get-RunBookSchedule')",
                        "schema": {
                          "properties": {
                            "ScheduleFound": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Session_Host_VM_and_RG": {
                      "runAfter": {
                        "Get_job_output": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_job_output')",
                        "schema": {
                          "properties": {
                            "productionVM": {
                              "type": "string"
                            },
                            "productionVmRg": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_image_version": {
                      "runAfter": {
                        "Get_job_output_of_marketplace_image_version": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_job_output_of_marketplace_image_version')",
                        "schema": {
                          "properties": {
                            "NewImageFound": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "outputs": {}
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureautomation": {
                        "connectionId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/connections/{2}', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountConnectionName'))]",
                        "connectionName": "[parameters('automationAccountConnectionName')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        },
                        "id": "[concat(format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureautomation', parameters('subscriptionId'), parameters('automationAccountLocation')))]"
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "imagePrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Logic/workflows', parameters('workflows_GetImageVersion_name')), '2017-07-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountResourceGroup')), 'Microsoft.Resources/deployments', parameters('automationAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('automationAccountConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('blobConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('getBlobUpdateLogicApp-deployment-{0}', parameters('deploymentNameSuffix'))]",
      "subscriptionId": "[variables('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "workflows_GetBlobUpdate_name": {
            "value": "[parameters('workflows_GetBlobUpdate_name')]"
          },
          "automationAccountConnectionName": {
            "value": "[parameters('automationAccountConnectionName')]"
          },
          "automationAccountName": {
            "value": "[parameters('automationAccountName')]"
          },
          "automationAccountResourceGroup": {
            "value": "[parameters('automationAccountResourceGroup')]"
          },
          "blobConnectionName": {
            "value": "[parameters('blobConnectionName')]"
          },
          "identityType": {
            "value": "[parameters('identityType')]"
          },
          "state": {
            "value": "[parameters('state')]"
          },
          "schema": {
            "value": "[parameters('schema')]"
          },
          "contentVersion": {
            "value": "[parameters('contentVersion')]"
          },
          "connectionType": {
            "value": "[parameters('connectionType')]"
          },
          "triggerFrequency": {
            "value": "[parameters('triggerFrequency')]"
          },
          "triggerInterval": {
            "value": "[parameters('triggerInterval')]"
          },
          "container": {
            "value": "[parameters('container')]"
          },
          "hostPoolName": {
            "value": "[parameters('hostPoolName')]"
          },
          "checkBothCreatedAndModifiedDateTime": {
            "value": "[parameters('checkBothCreatedAndModifiedDateTime')]"
          },
          "maxFileCount": {
            "value": "[parameters('maxFileCount')]"
          },
          "subscriptionId": {
            "value": "[variables('subscriptionId')]"
          },
          "runbookGetRunBookSchedule": {
            "value": "[parameters('runbookScheduleRunbookName')]"
          },
          "runbookGetSessionHostVirtualMachine": {
            "value": "[parameters('runbookGetSessionHostVm')]"
          },
          "runbookNewHostPoolRipAndReplace": {
            "value": "[parameters('runbookNewHostPoolRipAndReplace')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "5487900621947116335"
            }
          },
          "parameters": {
            "subscriptionId": {
              "type": "string"
            },
            "workflows_GetBlobUpdate_name": {
              "type": "string"
            },
            "automationAccountConnectionName": {
              "type": "string"
            },
            "automationAccountResourceGroup": {
              "type": "string"
            },
            "automationAccountName": {
              "type": "string"
            },
            "blobConnectionName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "identityType": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "schema": {
              "type": "string"
            },
            "contentVersion": {
              "type": "string"
            },
            "connectionType": {
              "type": "string"
            },
            "triggerFrequency": {
              "type": "string"
            },
            "triggerInterval": {
              "type": "int"
            },
            "container": {
              "type": "string"
            },
            "hostPoolName": {
              "type": "string"
            },
            "checkBothCreatedAndModifiedDateTime": {
              "type": "bool"
            },
            "maxFileCount": {
              "type": "int"
            },
            "runbookNewHostPoolRipAndReplace": {
              "type": "string"
            },
            "runbookGetRunBookSchedule": {
              "type": "string"
            },
            "runbookGetSessionHostVirtualMachine": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[parameters('workflows_GetBlobUpdate_name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "[parameters('identityType')]"
              },
              "properties": {
                "state": "[parameters('state')]",
                "definition": {
                  "$schema": "[parameters('schema')]",
                  "contentVersion": "[parameters('contentVersion')]",
                  "parameters": {
                    "$connections": {
                      "defaultValue": {},
                      "type": "[parameters('connectionType')]"
                    }
                  },
                  "triggers": {
                    "When_a_blob_is_added_or_modified_(properties_only)_(V2)": {
                      "recurrence": {
                        "frequency": "[parameters('triggerFrequency')]",
                        "interval": "[parameters('triggerInterval')]"
                      },
                      "evaluatedRecurrence": {
                        "frequency": "[parameters('triggerFrequency')]",
                        "interval": "[parameters('triggerInterval')]"
                      },
                      "splitOn": "@triggerBody()",
                      "metadata": {
                        "container": "[format('/{0}', parameters('container'))]"
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureblob']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "[format('/v2/datasets/@{{encodeURIComponent(encodeURIComponent(''{0}''))}}/triggers/batch/onupdatedfile', parameters('container'))]",
                        "queries": {
                          "checkBothCreatedAndModifiedDateTime": "[parameters('checkBothCreatedAndModifiedDateTime')]",
                          "folderId": "[format('/{0}', parameters('container'))]",
                          "maxFileCount": "[parameters('maxFileCount')]"
                        }
                      }
                    }
                  },
                  "actions": {
                    "Condition": {
                      "actions": {
                        "Create_job_2": {
                          "runAfter": {},
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "properties": {
                                "parameters": {
                                  "hostpoolName": "[parameters('hostPoolName')]"
                                }
                              }
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "[format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName'))]",
                            "queries": {
                              "runbookName": "[parameters('runbookGetSessionHostVirtualMachine')]",
                              "wait": true,
                              "x-ms-api-version": "2015-10-31"
                            }
                          }
                        },
                        "Create_job_3": {
                          "runAfter": {
                            "Parse_JSON_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                              }
                            },
                            "method": "put",
                            "path": "[format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName'))]",
                            "queries": {
                              "runbookName": "[parameters('runbookNewHostPoolRipAndReplace')]",
                              "wait": true,
                              "x-ms-api-version": "2015-10-31"
                            }
                          }
                        },
                        "Get_job_output_2": {
                          "runAfter": {
                            "Create_job_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "[format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs/@{{encodeURIComponent(body(''Create_job_2'')?[''properties'']?[''jobId''])}}/output', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName'))]",
                            "queries": {
                              "x-ms-api-version": "2015-10-31"
                            }
                          }
                        },
                        "Parse_JSON_2": {
                          "runAfter": {
                            "Get_job_output_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_job_output_2')",
                            "schema": {
                              "properties": {
                                "productionVM": {
                                  "type": "string"
                                },
                                "productionVmRg": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_JSON": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Terminate": {
                            "runAfter": {},
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Cancelled"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@body('Parse_JSON')?['ScheduleFound']",
                              false
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Create_job": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "properties": {
                            "parameters": {
                              "AutomationAccountName": "[parameters('automationAccountName')]",
                              "ResourceGroupName": "[parameters('automationAccountResourceGroup')]",
                              "runbookName": "[parameters('runbookNewHostPoolRipAndReplace')]"
                            }
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureautomation']['connectionId']"
                          }
                        },
                        "method": "put",
                        "path": "[format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName'))]",
                        "queries": {
                          "runbookName": "[parameters('runbookGetRunBookSchedule')]",
                          "wait": true,
                          "x-ms-api-version": "2015-10-31"
                        }
                      }
                    },
                    "Get_job_output": {
                      "runAfter": {
                        "Create_job": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureautomation']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "[format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourceGroups/@{{encodeURIComponent(''{1}'')}}/providers/Microsoft.Automation/automationAccounts/@{{encodeURIComponent(''{2}'')}}/jobs/@{{encodeURIComponent(body(''Create_job'')?[''properties'']?[''jobId''])}}/output', parameters('subscriptionId'), parameters('automationAccountResourceGroup'), parameters('automationAccountName'))]",
                        "queries": {
                          "x-ms-api-version": "2015-10-31"
                        }
                      }
                    },
                    "Parse_JSON": {
                      "runAfter": {
                        "Get_job_output": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_job_output')",
                        "schema": {
                          "properties": {
                            "ScheduleFound": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "outputs": {}
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azureautomation": {
                        "connectionId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/connections/{2}', parameters('subscriptionId'), resourceGroup().name, parameters('automationAccountConnectionName'))]",
                        "connectionName": "[parameters('automationAccountConnectionName')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        },
                        "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureautomation', parameters('subscriptionId'), parameters('location'))]"
                      },
                      "azureblob": {
                        "connectionId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/connections/{2}', parameters('subscriptionId'), resourceGroup().name, parameters('blobConnectionName'))]",
                        "connectionName": "[parameters('blobConnectionName')]",
                        "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureblob', parameters('subscriptionId'), parameters('location'))]"
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "blobPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Logic/workflows', parameters('workflows_GetBlobUpdate_name')), '2017-07-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('automationAccountResourceGroup')), 'Microsoft.Resources/deployments', parameters('automationAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('automationAccountConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('blobConnection-deployment-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    }
  ]
}